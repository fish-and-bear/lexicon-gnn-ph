[program:fil-dict-api]
# Use %(here)s to reference the directory where this file is located
directory=%(here)s
command=gunicorn --config gunicorn_config.py app:app
autostart=true
autorestart=true
stderr_logfile=%(here)s/../logs/supervisor.err.log
stdout_logfile=%(here)s/../logs/supervisor.out.log
# Use environment variables from .env file when possible
environment=
    PYTHONPATH="%(here)s",
    FLASK_APP="app.py",
    FLASK_ENV="production",
    DB_NAME="%(ENV_DB_NAME)s",
    DB_USER="%(ENV_DB_USER)s",
    DB_PASSWORD="%(ENV_DB_PASSWORD)s",
    DB_HOST="%(ENV_DB_HOST)s",
    DB_PORT="%(ENV_DB_PORT)s",
    REDIS_ENABLED="%(ENV_REDIS_ENABLED)s"

[supervisord]
logfile=%(here)s/../logs/supervisord.log
logfile_maxbytes=50MB
logfile_backups=10
loglevel=info
pidfile=%(here)s/../supervisord.pid

[supervisorctl]
# Use Unix socket on Linux, TCP on Windows
serverurl=unix://%(here)s/../supervisor.sock ; use a unix:// URL for a unix socket
;serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket

[unix_http_server]
file=%(here)s/../supervisor.sock
chmod=0700

[inet_http_server]
port=127.0.0.1:9001
username=admin
password=admin

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

# How to run:
# Linux: supervisord -c supervisor.conf
# Windows: supervisord -c supervisor.conf
# To control: supervisorctl -c supervisor.conf status 