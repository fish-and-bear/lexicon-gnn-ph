global:
  scrape_interval: 15s
  evaluation_interval: 15s
  scrape_timeout: 10s

  external_labels:
    monitor: 'fil-relex-monitor'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - 'alertmanager:9093'

# Load rules once and periodically evaluate them
rule_files:
  - "rules/*.yml"

scrape_configs:
  # Backend API metrics
  - job_name: 'backend'
    metrics_path: '/metrics'
    scheme: 'http'
    static_configs:
      - targets: ['backend:10000']
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '([^:]+)(?::\d+)?'
        replacement: '${1}'

  # Redis metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    metrics_path: '/metrics'

  # PostgreSQL metrics
  - job_name: 'postgresql'
    static_configs:
      - targets: ['postgres-exporter:9187']
    metrics_path: '/metrics'

  # Node metrics
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']

  # Nginx metrics
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']

  # Frontend metrics
  - job_name: 'frontend'
    metrics_path: '/metrics'
    scheme: 'http'
    static_configs:
      - targets: ['frontend:3000']

  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

# Remote write configuration for long-term storage
remote_write:
  - url: "http://victoria-metrics:8428/api/v1/write"
    queue_config:
      capacity: 10000
      max_samples_per_send: 1000
      batch_send_deadline: 5s
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'go_.*'
        action: drop

# Storage configuration
storage:
  tsdb:
    path: /prometheus
    retention.time: 15d
    retention.size: 10GB
  agent:
    wal_compression: true
  remote:
    read_sample_limit: 10000
    read_concurrent_limit: 10

# Web configuration
web:
  console:
    templates: '/etc/prometheus/consoles'
    libraries: '/etc/prometheus/console_libraries'
  cors:
    cors_origins: ['*']
  compression: true 