/* WordExplorer specific styles */

/* 
  Removed redundant :root and .dark variable definitions.
  Component should inherit variables from global scope (src/styles/utilities/_variables.css)
*/

/* 
  Removed redundant global html, body, h1 styles. 
  These should be handled by src/styles/base/ files.
*/

.word-explorer {
  display: flex;
  flex-direction: column;
  height: 100vh;
  width: 100vw;
  max-width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  overflow: hidden;
}

/* REMOVED: Header content styles are now in Header.css */

/* Dark mode style for header maintained for theme consistency - updated */
.dark .header-content {
  background-color: var(--header-color, #0a1525) !important;
  color: var(--text-color-white, #f0f0f0) !important;
  border-bottom: 1px solid rgba(255, 255, 255, 0.05) !important;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.25) !important;
}

h1 {
  font-size: 1.25rem;
  font-weight: 600;
  margin: 0;
}

main {
  display: flex;
  flex: 1;
  min-height: 0;
  overflow: hidden;
  position: relative;
  width: 100%;
  box-sizing: border-box;
}

.graph-container {
  width: 100%;
  height: 100%;
  position: relative;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.graph-content {
  flex: 1;
  width: 100%;
  height: 100%;
  position: relative;
  overflow: hidden;
}

.details-container {
  width: 100% !important;
  height: 100% !important;
  overflow-y: auto !important;
  background-color: var(--card-bg-color);
  color: var(--text-color);
  position: relative;
  max-width: 100%;
  box-sizing: border-box;
}

.details-container > * {
  width: 100% !important;
  max-width: 100% !important;
  box-sizing: border-box;
}

.no-word-selected {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  text-align: center;
  color: var(--text-secondary-color);
  padding: 2rem;
  background-color: var(--card-bg-color);
  border-radius: var(--radius-md);
  box-shadow: var(--card-shadow);
}

.no-word-selected p {
  margin-bottom: 1rem;
  font-size: 1.1rem;
}

.word-details h2 {
  color: var(--secondary-color);
  padding-bottom: 0.25rem;
}

.definition-card {
  background-color: var(--definition-bg-color);
  border: 1px solid var(--card-border-color);
  border-radius: 4px;
  padding: 0.75rem;
  margin-bottom: 1rem;
}

.definition-card h3 {
  color: var(--secondary-color);
  margin-top: 0;
  margin-bottom: 0.5rem;
}

.definition-card ol {
  padding-left: 1.25rem;
  margin-bottom: 0.5rem;
}

.definition-card ol > li {
  margin-bottom: 0.5rem;
  line-height: 1.4;
}

.definition-card .source {
  font-size: 0.8rem;
  color: var(--accent-color);
  font-style: italic;
  display: block;
  margin-top: 0.25rem;
}

.dark .definition-card .source {
  color: var(--link-color);
}

.word-list {
  list-style-type: none;
  padding: 0;
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-top: 0.75rem;
}

.word-list li {
  background-color: var(--input-bg-color);
  padding: 0.25rem 0.75rem;
  border-radius: 15px;
  font-size: 0.9rem;
  border: 1px solid var(--accent-color);
}

.dark .word-list li {
  border: 1px solid var(--color-root);
}

.search-container {
  display: flex;
  align-items: center;
  justify-content: space-between;
  background-color: var(--card-bg-color);
  border-radius: 0;
  padding: 8px 12px;
  margin: 0;
  box-shadow: none;
  width: 100%;
}

.nav-buttons {
  display: flex;
  gap: 8px;
}

.nav-button {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 36px;
  height: 36px;
  background-color: var(--button-bg-color);
  color: var(--button-text-color);
  border: none;
  border-radius: 50%;
  cursor: pointer;
  transition: background-color 0.2s, transform 0.2s;
}

.nav-button:hover,
.nav-button:focus {
  background-color: var(--button-hover-bg-color);
}

.nav-button:active {
  transform: scale(0.95);
}

.nav-button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.search-input-container {
  display: flex;
  flex-grow: 1;
  align-items: center;
  margin: 0 12px;
  position: relative;
}

.search-input {
  width: 100%;
  padding: 10px 12px;
  border: none;
  background-color: transparent;
  color: var(--text-color);
  font-size: 1rem;
  outline: none;
}

.search-button {
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 36px;
  height: 36px;
  padding: 0 12px;
  background-color: var(--primary-color);
  color: white;
  border: none;
  border-radius: 18px;
  cursor: pointer;
  transition: background-color 0.2s, transform 0.2s;
}

.search-button:hover,
.search-button:focus {
  background-color: var(--primary-color-dark);
}

.search-button:active {
  transform: scale(0.95);
}

.search-button-icon {
  margin-right: 0;
}

.search-button-text {
  display: none;
}

@media (min-width: 480px) {
  .search-button {
    padding: 0 16px;
  }
  
  .search-button-icon {
    margin-right: 6px;
  }
  
  .search-button-text {
    display: inline;
  }}

.random-word-button {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 36px;
  min-width: 36px;
  padding: 0 12px;
  background-color: var(--button-bg-color);
  color: var(--button-text-color);
  border: none;
  border-radius: 18px;
  cursor: pointer;
  margin-left: 8px;
  transition: background-color 0.2s, transform 0.2s;
}

.random-word-button:hover,
.random-word-button:focus {
  background-color: var(--button-hover-bg-color);
}

.random-word-button:active {
  transform: scale(0.95);
}

.random-word-button-icon {
  margin-right: 0;
}

.random-word-button-text {
  display: none;
}

@media (min-width: 576px) {
  .random-word-button {
    padding: 0 16px;
  }
  
  .random-word-button-icon {
    margin-right: 6px;
  }
  
  .random-word-button-text {
    display: inline;
  }}

/* Style the navigation buttons */
.nav-buttons {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.nav-button {
  width: 36px;
  height: 36px;
  border-radius: 50%;
  background-color: white;
  color: #1a2e5c;
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 1px 3px rgba(0,0,0,0.1);
  font-size: 1.25rem;
  transition: background-color 0.2s;
}

.nav-button:hover {
  background-color: #f0f0f0;
}

.nav-button:disabled {
  background-color: #e0e0e0;
  color: #999;
  cursor: not-allowed;
}

/* Random word button in the search bar */
.random-word-button {
  background-color: #f8a100;
  color: #1a2e5c;
  border-radius: 50px;
  padding: 0.5rem 1.25rem;
  border: none;
  font-weight: 500;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-left: 0.5rem;
  height: 40px;
}

.random-word-button:hover {
  background-color: #ffb429;
}

.random-word-button:disabled {
  background-color: #e0e0e0;
  color: #999;
  cursor: not-allowed;
}

/* Add icon styles for the search button */
.search-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: 0.25rem;
}

.random-button {
  padding: 0.5rem 1rem;
  font-size: 1rem;
  background-color: var(--button-color);
  color: var(--button-text-color);
  border: none;
  border-radius: 24px;
  cursor: pointer;
  transition: background-color 0.3s, transform 0.1s;
  height: 100%;
  align-self: stretch;
}

.random-button:hover {
  background-color: var(--primary-color);
}

.random-button:active {
  transform: scale(0.95);
}

.search-suggestions {
  position: absolute;
  top: calc(100% + 5px);
  left: 0;
  right: 0;
  background-color: white;
  border-radius: 12px;
  max-height: 300px;
  overflow-y: auto;
  z-index: 1000;
  list-style-type: none;
  padding: 0.5rem 0;
  margin: 0;
  display: block;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.search-suggestions li {
  padding: 10px 16px;
  cursor: pointer;
  color: #333;
  transition: background-color 0.2s;
  display: flex;
  flex-direction: column;
}

.search-suggestions li:hover {
  background-color: #f5f5f5;
}

.search-suggestions li strong {
  margin-bottom: 4px;
  color: #1a2e5c;
}

.suggestion-definition {
  font-size: 0.8rem;
  color: #666;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100%;
}

.search-loader {
  position: absolute;
  right: 12px;
  top: 50%;
  transform: translateY(-50%);
  color: #888;
}

.dark .search-suggestions {
  background-color: #212836;
  border: 1px solid #2e3a4e;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
}

.dark .search-suggestions li {
  color: #e0e0e0;
  border-bottom: 1px solid rgba(255, 255, 255, 0.05);
}

.dark .search-suggestions li:hover {
  background-color: #2a3546;
}

.dark .search-suggestions li strong {
  color: #5d9cec;
}

.dark .suggestion-definition {
  color: #a0a0a0;
}

.word-explorer.dark .search-suggestions {
  background-color: var(--card-bg-color);
  border-color: var(--card-border-color);
}

.word-explorer.dark .search-suggestions li:hover {
  background-color: var(--primary-color);
}

.search-loading {
  position: absolute;
  right: 16px;
  top: 50%;
  transform: translateY(-50%);
  color: #888;
}

@media (max-width: 768px) {
  /* REMOVED: Header responsive styles are now in Header.css */

  .search-container {
    padding: 0.5rem;
    margin: 0.75rem;
  }

  .nav-button {
    width: 32px;
    height: 32px;
    font-size: 1rem;
  }

  .search-input {
    font-size: 0.95rem;
    padding: 0 0.75rem;
  }

  .search-button, 
  .random-word-button {
    padding: 0.25rem 0.75rem;
    height: 36px;
    font-size: 0.9rem;
  }

  .search-suggestions li {
    padding: 10px 14px;
  }

  input[type="text"], button {
    width: 100%;
  }

  .word-details h2 {
    font-size: 1.3rem;
  }

  .definition-card {
    padding: 0.5rem;
  }

  .definition-card h3 {
    font-size: 1rem;
  }

  .word-list li {
    font-size: 0.8rem;
    padding: 0.2rem 0.4rem;
  }

  main {
    flex-direction: column;
  }
  
  main [data-panel-group] {
    flex-direction: column !important;
  }
  
  .graph-container,
  .details-container {
    width: 100% !important;
    max-width: 100% !important;
    flex-shrink: 0;
  }}

.loading-indicator {
  display: inline-block;
  width: 1rem;
  height: 1rem;
  border: 2px solid var(--button-text-color);
  border-radius: 50%;
  border-top-color: transparent;
  animation: spin 1s linear infinite;
  margin-left: 0.5rem;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }}

.loading-spinner {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100%;
  text-align: center;
  color: var(--text-secondary-color);
  padding: 2rem;
  background-color: var(--card-bg-color);
  border-radius: var(--radius-md);
  box-shadow: var(--card-shadow);
  font-size: 1.1rem;
}

.loading-spinner::before {
  content: "";
  width: 40px;
  height: 40px;
  margin-bottom: 1rem;
  border: 4px solid var(--card-border-color);
  border-top: 4px solid var(--accent-color);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }}

/* Note: The word-details-container class is defined in global.css */

/* Word Content Tabs */
.word-content-tabs {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  padding: 0.75rem 1rem;
  background-color: #f8f9fa;
  border-bottom: 1px solid rgba(0, 0, 0, 0.08);
}

.tab-button {
  padding: 0.5rem 1rem;
  background-color: transparent;
  color: var(--text-color);
  border: 1px solid rgba(0, 0, 0, 0.08);
  border-radius: 0.5rem;
  cursor: pointer;
  font-size: 0.875rem;
  font-weight: 500;
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.tab-button:hover {
  background-color: #f1f5f9;
  transform: translateY(-1px);
}

.tab-button.active {
  background-color: var(--accent-color, #fca311);
  color: white;
  border-color: var(--accent-color, #fca311);
}

.tab-icon {
  font-size: 1.1em;
}

.word-content {
  padding: 1.5rem;
}

/* Fix for empty state */
.empty-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 2rem;
  text-align: center;
  background-color: rgba(0, 0, 0, 0.01);
  border-radius: 0.5rem;
  border: 1px dashed rgba(0, 0, 0, 0.1);
  margin: 1rem 0;
}

.empty-state p {
  margin-bottom: 1rem;
  color: var(--text-secondary, #6c757d);
}

.fetch-network-button {
  padding: 0.5rem 1rem;
  background-color: var(--accent-color, #fca311);
  color: white;
  border: none;
  border-radius: 0.25rem;
  cursor: pointer;
  font-weight: 500;
  transition: all 0.2s ease;
}

.fetch-network-button:hover {
  background-color: var(--accent-color-dark, #e76f51);
  transform: translateY(-1px);
}

/* Add MUI TabPanel styling */
.MuiTabPanel-root {
  padding: 0 !important;
  height: calc(100vh - 160px);
  overflow: hidden;
}

/* Re-adding Footer Styles */
.footer {
  background-color: var(--text-color);
  color: var(--bg-color);
  text-align: center;
  padding: 0.25rem;
  font-size: 0.8rem;
  border-top: 1px solid var(--accent-color);
  /* position: sticky; Let flexbox handle placement within word-explorer */
  /* bottom: 0; */
  width: 100%;
  box-sizing: border-box; /* Include padding in width */
  z-index: 10;
}

.dark .footer {
  background-color: var(--footer-color);
  color: var(--text-color-secondary);
  border-top: 1px solid rgba(255, 255, 255, 0.05);
}

/* Adjust footer size on small screens */

/* Re-adding Theme Toggle Button Styles */
.theme-toggle {
  background: none;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  padding: 0.25rem;
  line-height: 1;
  margin-left: 0.5rem;
  transition: transform 0.2s, opacity 0.2s;
}

.theme-toggle:hover {
  transform: scale(1.1);
  opacity: 0.8;
}

.dark .theme-toggle {
  color: var(--primary-color);
  filter: drop-shadow(0 0 2px rgba(255, 209, 102, 0.3));
}

.dark .theme-toggle:hover {
  color: var(--gold);
}

/* Adjust theme toggle size on small screens */

/* --- REMOVE Targeting the main word header lemma --- */
/*
.word-details-header-lemma {
  word-break: break-word !important;
  overflow-wrap: break-word !important;
  min-width: 0 !important;
  width: 100% !important;
  display: block !important; 
}
*/

/* React-Resizable-Panels Styles */
main [data-panel-group] {
  width: 100% !important;
  height: 100% !important;
  display: flex !important;
  flex-direction: row !important;
}

main [data-panel] {
  height: 100% !important;
  overflow: hidden !important;
}

main [data-panel-resizer] {
  width: 4px !important;
  background-color: var(--card-border-color) !important;
  cursor: col-resize !important;
}

.dark .search-container {
  background-color: var(--card-bg-color);
  border-bottom: 1px solid var(--card-border-color);
}

.dark .search-input {
  background-color: var(--input-bg-color);
  color: var(--text-color);
  border-color: var(--input-border-color);
}

.dark .search-input:focus {
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(255, 209, 102, 0.2);
}

.dark .search-button,
.dark .random-button {
  background-color: var(--primary-color);
  color: var(--button-text-color);
}

.dark .search-button:hover,
.dark .random-button:hover {
  background-color: #e6bc5c;
}

.dark .graph-container {
  background-color: var(--graph-bg-color);
}

.dark .details-container {
  background-color: var(--card-bg-color);
  box-shadow: -2px 0 10px var(--shadow-color);
}

.dark .definition-card {
  background-color: var(--definition-bg-color);
  border-color: rgba(255, 255, 255, 0.08);
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
  color: var(--text-color);
}

.dark .no-word-selected,
.dark .loading-spinner {
  background-color: var(--card-bg-color-elevated);
  color: var(--text-color-secondary);
  border: 1px solid rgba(255, 255, 255, 0.05);
}

.dark main [data-panel-resizer] {
  background-color: rgba(255, 255, 255, 0.07) !important;
}

.dark .word-list li {
  background-color: var(--input-bg-color);
  border-color: rgba(255, 209, 102, 0.3);
  color: var(--text-color);
}

.dark .search-suggestions {
  background-color: var(--card-bg-color-elevated);
  border-color: var(--card-border-color);
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
}

.dark .search-suggestions li:hover {
  background-color: rgba(255, 209, 102, 0.2);
  color: var(--text-color-white);
}

.dark .error-message {
  background-color: rgba(230, 57, 70, 0.1);
  border: 1px solid rgba(230, 57, 70, 0.3);
  color: #ff8a93;
}

.dark .footer {
  background-color: var(--footer-color);
  color: var(--text-color-secondary);
  border-top: 1px solid rgba(255, 255, 255, 0.05);
}

/* Network controls in dark mode - More aggressive overrides */
.dark .network-controls {
  background-color: var(--graph-bg-color) !important;
  border: none !important;
  color: var(--text-color) !important;
  box-shadow: none !important;
}

.dark .network-controls:hover,
.dark .network-controls:focus,
.dark .network-controls:active {
  background-color: var(--card-bg-color-elevated) !important;
  border: none !important;
  box-shadow: none !important;
}

/* Target all Slider components in dark mode */
.dark .MuiSlider-root,
.dark .MuiSlider-root.Mui-focused,
.dark .MuiSlider-root.Mui-active,
.dark .MuiSlider-root:hover {
  color: var(--primary-color) !important;
  box-shadow: none !important;
}

/* Target rail specifically */
.dark .MuiSlider-rail,
.dark .MuiSlider-rail:hover {
  background-color: rgba(255, 255, 255, 0.2) !important;
  border: none !important;
  box-shadow: none !important;
}

/* Target track specifically */
.dark .MuiSlider-track,
.dark .MuiSlider-track:hover {
  background-color: var(--primary-color) !important;
  border: none !important;
  box-shadow: none !important;
}

/* Target all thumb states */
.dark .MuiSlider-thumb,
.dark .MuiSlider-thumb.Mui-focused,
.dark .MuiSlider-thumb.Mui-active,
.dark .MuiSlider-thumb:hover,
.dark .MuiSlider-thumb:active,
.dark .MuiSlider-thumb.Mui-focusVisible {
  background-color: var(--primary-color) !important;
  border: none !important;
  box-shadow: none !important;
  outline: none !important;
}

/* Especially aggressive style to override Material-UI's focus styles */
.dark [class*="MuiSlider-"] {
  box-shadow: none !important;
}

/* Fix for the slider container */
.dark [class*="SliderContainer-"] {
  box-shadow: none !important;
}

/* Enhance dark mode styles for definition cards and content */
.dark .definition-card {
  background-color: var(--definition-bg-color);
  border-color: rgba(255, 255, 255, 0.08);
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
  color: var(--text-color);
}

/* Ensure proper styling for MUI components in dark mode */
.dark .MuiTabs-root {
  background-color: var(--card-bg-color) !important;
  color: var(--text-color) !important;
}

.dark .MuiTab-root {
  color: var(--text-color-secondary) !important;
}

.dark .MuiTab-root.Mui-selected {
  color: var(--primary-color) !important;
}

.dark .MuiTabPanel-root {
  background-color: var(--card-bg-color) !important;
  color: var(--text-color) !important;
}

.dark .MuiTypography-root {
  color: var(--text-color) !important;
}

.dark .MuiPaper-root {
  background-color: var(--card-bg-color) !important;
  color: var(--text-color) !important;
}

.dark .MuiBox-root {
  color: var(--text-color);
}

/* Ensure all typography and text elements have proper dark mode colors */
.dark h1, .dark h2, .dark h3, .dark h4, .dark h5, .dark h6, 
.dark p, .dark span, .dark div, .dark li {
  color: var(--text-color);
}

/* Add styles for buttons in dark mode */
.dark button:not(.MuiButton-root):not(.search-button):not(.random-button):not(.theme-toggle) {
  background-color: var(--card-bg-color-elevated);
  color: var(--text-color);
  border-color: var(--card-border-color);
}

.dark button:not(.MuiButton-root):not(.search-button):not(.random-button):not(.theme-toggle):hover {
  background-color: var(--card-border-color);
}

/* Ensure proper background for Tab sections */
.dark .MuiBox-root[role="tabpanel"] {
  background-color: var(--card-bg-color) !important;
}

/* Additional styles to remove any box shadows or borders that might look bad in dark mode */
.dark .MuiPaper-elevation1,
.dark .MuiPaper-elevation2,
.dark .MuiPaper-elevation3,
.dark .MuiPaper-elevation4,
.dark .MuiPaper-elevation5 {
  box-shadow: none !important;
  border: 1px solid var(--card-border-color) !important;
}

/* Force background colors for all Material-UI components in dark mode */
.dark .MuiContainer-root,
.dark .MuiGrid-root,
.dark .MuiCard-root,
.dark .MuiCardContent-root,
.dark .MuiCardHeader-root,
.dark .MuiCardActions-root,
.dark .MuiList-root,
.dark .MuiListItem-root,
.dark .MuiListItemText-root {
  background-color: transparent !important;
  color: var(--text-color) !important;
}

/* Override Material UI styled components to ensure they respect dark mode */
.dark [class*="Mui"] {
  color: var(--text-color);
}

/* Override specific Material UI components that might be causing issues */
.dark [class*="MuiTab-root"] {
  color: var(--text-color-secondary);
}

.dark [class*="MuiTab-root"].Mui-selected {
  color: var(--primary-color);
}

/* Further override for Sliders */
.dark .MuiSlider-root * {
  box-shadow: none !important;
  outline: none !important;
  border: none !important;
}

/* Ensure text in definition sections has proper contrast and color */
.dark .definition-card * {
  color: var(--text-color);
}

.dark .definition-card h3 {
  color: var(--secondary-color);
}

.dark .definition-card .source {
  color: var(--link-color);
}

/* Add contrast to part of speech labels */
.dark .part-of-speech {
  color: var(--primary-color);
  font-weight: 600;
}

/* Ensure proper styling for any nested content */
.dark .MuiTableContainer-root,
.dark .MuiTable-root,
.dark .MuiTableHead-root,
.dark .MuiTableBody-root,
.dark .MuiTableRow-root,
.dark .MuiTableCell-root {
  background-color: var(--card-bg-color) !important;
  color: var(--text-color) !important;
  border-color: var(--card-border-color) !important;
}

/* Override any remaining box-shadows that might appear */
.dark * {
  box-shadow: none !important;
}

/* Fix text visibility in dark mode - target specific containers */
.dark .MuiTabPanel-root {
  background-color: var(--card-bg-color) !important;
  color: var(--text-color) !important;
}

.dark .MuiBox-root[role="tabpanel"] {
  background-color: var(--card-bg-color) !important;
}

/* Ensure right panel content is properly styled */
.dark .definition-card {
  background-color: var(--definition-bg-color) !important;
  color: var(--text-color) !important;
  border: 1px solid var(--card-border-color) !important;
}

/* Fix for definition text */
.dark .definition-card p,
.dark .definition-card li,
.dark .definition-card span {
  color: var(--text-color) !important;
}

/* Fix for part of speech headers */
.dark .part-of-speech,
.dark h2.part-of-speech,
.dark h3.part-of-speech {
  color: var(--primary-color) !important;
  font-weight: 600;
}

/* Fix for definition sources */
.dark .definition-card .source {
  color: var(--link-color) !important;
}

/* Reset the overly aggressive selector */
.dark [class*="Mui"] {
  color: inherit;
}

/* Target specific Material-UI components instead */
.dark .MuiPaper-root {
  background-color: var(--card-bg-color) !important;
}

.dark .MuiTypography-root {
  color: var(--text-color) !important;
}

/* Ensure tab panels have proper background */
.dark div[role="tabpanel"] {
  background-color: var(--card-bg-color) !important;
}

/* Fix styling for word part sections (noun, adjective, etc.) */
.dark .noun-section,
.dark .adjective-section,
.dark .verb-section,
.dark .adverb-section {
  background-color: var(--card-bg-color) !important;
  color: var(--text-color) !important;
}

/* Fix styling for part of speech headings */
.dark h2.noun,
.dark h2.adjective,
.dark h2.verb,
.dark h2.adverb {
  color: var(--primary-color) !important;
  font-weight: 600;
  border-bottom: 1px solid var(--card-border-color);
}

/* Fix for definition content */
.dark p.definition,
.dark div.definition,
.dark span.definition {
  color: var(--text-color) !important;
  background-color: var(--definition-bg-color) !important;
  padding: 12px;
  border-radius: 4px;
  border: 1px solid var(--card-border-color);
}

/* Fix source attribution styling */
.dark .source-attribution {
  color: var(--link-color) !important;
  font-style: italic;
  text-align: right;
  padding-top: 4px;
}

/* Fix main content background in word details */
.dark .word-details-content,
.dark .details-container {
  background-color: var(--card-bg-color) !important;
}

/* Fix text styling for definition text which could be in divs or list items */
.dark div.definition-text,
.dark li.definition-item,
.dark p.definition-text {
  color: var(--text-color) !important;
}

/* Create more contrast for part of speech labels and headings */
.dark h3.part-of-speech,
.dark span.part-of-speech {
  color: var(--gold) !important;
  background-color: rgba(255, 209, 102, 0.1);
  padding: 4px 8px;
  border-radius: 4px;
  display: inline-block;
  margin-bottom: 8px;
}

/* Target the main content area background */
.dark .MuiBox-root > div[role="tabpanel"] {
  background-color: var(--card-bg-color) !important;
}

/* Target all MUI containers and panels in dark mode, force dark background */
.dark .MuiContainer-root,
.dark .MuiPaper-root,
.dark [class*="MuiBox-root"],
.dark [class*="MuiContainer"],
.dark [class*="MuiPaper"] {
  background-color: var(--card-bg-color) !important;
}

/* Target typography elements in tabpanels to ensure they're visible */
.dark [role="tabpanel"] p,
.dark [role="tabpanel"] div,
.dark [role="tabpanel"] span,
.dark [role="tabpanel"] h1,
.dark [role="tabpanel"] h2,
.dark [role="tabpanel"] h3,
.dark [role="tabpanel"] h4,
.dark [role="tabpanel"] h5,
.dark [role="tabpanel"] h6 {
  color: var(--text-color) !important;
}

/* Fix the main details panel */
.dark .details-panel {
  background-color: var(--card-bg-color) !important;
}

/* Override background in a very specific manner to ensure it applies */
.dark .MuiBox-root[style] {
  background-color: var(--card-bg-color) !important;
}

/* Fix any remaining white panels */
.dark .MuiPaper-root.MuiPaper-elevation {
  background-color: var(--card-bg-color) !important;
  color: var(--text-color) !important;
}

/* Force background color on all elements with white backgrounds */
.dark [style*="background-color: rgb(255, 255, 255)"],
.dark [style*="background-color: white"],
.dark [style*="background-color:#fff"],
.dark [style*="background-color: #ffffff"],
.dark [style*="background: white"],
.dark [style*="background:#fff"] {
  background-color: var(--card-bg-color) !important;
}

/* Target all direct children of panel group */
.dark [data-panel-group] > * {
  background-color: var(--card-bg-color) !important;
}

/* Super specific rule to override inline styles */
.dark [class*="MuiBox-root"][style*="background"] {
  background-color: var(--card-bg-color) !important;
}

/* Critical override for Material UI components */
.dark {
  --mui-palette-background-paper: var(--card-bg-color) !important;
  --mui-palette-background-default: var(--card-bg-color) !important;
  --mui-palette-text-primary: var(--text-color) !important;
  --mui-palette-text-secondary: var(--text-color-secondary) !important;
}

/* Override Material UI's CSS variables */
.dark .MuiPaper-root,
.dark .MuiContainer-root {
  --mui-palette-background-paper: var(--card-bg-color) !important;
  background-color: var(--card-bg-color) !important;
  color: var(--text-color) !important;
  border-color: var(--border-color-dark) !important;
}

/* Add specific rule to fix all MUI Paper borders in dark mode */
.dark .MuiPaper-root,
.dark [class*="MuiPaper"] {
  border: 1px solid var(--border-color-dark) !important;
  box-shadow: none !important;
}

/* Override any white borders that might be set inline */
.dark [style*="border-color: white"],
.dark [style*="border-color: #fff"],
.dark [style*="border-color: rgb(255, 255, 255)"],
.dark [style*="border: 1px solid white"],
.dark [style*="border: 1px solid #fff"] {
  border-color: var(--border-color-dark) !important;
  border-width: 1px !important;
}

/* Fix specific elevation styles */
.dark .MuiPaper-elevation0,
.dark .MuiPaper-elevation1,
.dark .MuiPaper-elevation2,
.dark .MuiPaper-elevation3,
.dark .MuiPaper-elevation4,
.dark .MuiPaper-elevation5,
.dark .MuiPaper-elevation6 {
  border: 1px solid var(--border-color-dark) !important;
  box-shadow: none !important;
}

/* Override possible inline styles */
.dark [style*="border:"] {
  border-color: var(--border-color-dark) !important;
}

/* Ensure Box components in Paper also have the right borders */
.dark .MuiPaper-root .MuiBox-root {
  border-color: var(--border-color-dark) !important;
}

/* Fix for specific panel components */
.dark .panel-container .MuiPaper-root {
  border: 1px solid var(--border-color-dark) !important;
  border-bottom: 1px solid var(--border-color-dark) !important;
  border-top: 1px solid var(--border-color-dark) !important;
  border-left: 1px solid var(--border-color-dark) !important;
  border-right: 1px solid var(--border-color-dark) !important;
}

/* Ultimate override - this will affect every element */
.dark .MuiTabPanel-root::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--card-bg-color);
  z-index: -1;
}

/* Combined Media Query */
@media (max-width: 480px) {
/* REMOVED: Header responsive styles are now in Header.css */
  
  .word-details h2 {
    font-size: 1.2rem;
  }

  .definition-card h3 {
    font-size: 0.9rem;
  }

  .word-list li {
    font-size: 0.7rem;
    padding: 0.1rem 0.3rem;
  }

  .footer {
    font-size: 0.7rem;
    padding: 0.4rem;
  }

  .search-container {
    flex-wrap: wrap;
    padding: 0.5rem;
    margin: 0.5rem;
    gap: 0.5rem;
  }

  .nav-buttons {
    order: 1;
    width: 100%;
    justify-content: center;
    margin-top: 0.5rem;
  }

  .search-input-container {
    order: 0;
    flex: 1 1 100%;
    margin-right: 0;
  }

  .search-button {
    order: 2;
    flex: 1;
    margin: 0;
  }

  .random-word-button {
    order: 3;
    flex: 1;
    margin: 0;
  }

  main {
    padding: 0;
  }
  
  .graph-container {
    min-height: 250px;
  }
/* ... other 480px rules ... */
  .footer {
    font-size: 0.7rem;
    padding: 0.4rem;
  }
.theme-toggle, .history-button {
    padding: 0.25rem;
    font-size: 1.2rem;
  }

}