  return (
    // Main Wrapper Box
    <Box 
      ref={ref} 
      className={`word-details-container ${theme.palette.mode}`}
      sx={{
        display: 'flex',
        flexDirection: 'column',
        height: '100%', 
        overflow: 'hidden', 
        bgcolor: 'background.default',
        width: '100%', 
        maxWidth: 'none', 
        p: 0, 
        m: 0 
      }}
    >
      {/* Header Section */} 
        height: '100%', // Ensure it tries to fill height
        overflow: 'hidden', // Prevent content overflow issues at this level
        bgcolor: 'background.default', // Use theme background
        width: '100%', // <<< ENSURE FULL WIDTH
        maxWidth: 'none', // <<< REMOVE MAX WIDTH LIMIT
        p: 0, // <<< REMOVE PADDING AT THIS LEVEL (padding should be inside sections)
        m: 0 // <<< REMOVE MARGIN AT THIS LEVEL
      }}
    >
      {isLoading && (
        <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100%', p: 3 }}>
          <CircularProgress />
        </Box>
      )}
      {!isLoading && wordData && (
        <>
          {/* Header Section - Remove padding for desktop */ 
          <Box sx={{ 
              p: isMobile ? 1.5 : 0, // Set desktop padding to 0
              borderBottom: 1, 
              borderColor: 'divider' 
            }}>
            {renderHeader()}
          </Box>

          {/* Tabs and Content Section */}
          <Box sx={{ display: 'flex', flexGrow: 1, overflow: 'hidden' }}>
            {/* Vertical Tabs for Desktop */}
            {!isMobile && (
              <Tabs
                orientation="vertical"
                variant="scrollable"
                value={activeTab}
                onChange={handleTabChange}
                aria-label="Word details sections"
                sx={{
                  borderRight: 1,
                  borderColor: 'divider',
                  minWidth: 160, // Give tabs a reasonable min-width
                  bgcolor: 'background.paper',
                  '& .MuiTab-root': {
                    textTransform: 'none',
                    fontWeight: theme.typography.fontWeightRegular,
                    fontSize: theme.typography.pxToRem(14),
                    minHeight: 48, // Adjust height
                    justifyContent: 'flex-start',
                    pl: 2, // Add padding
                    '&.Mui-selected': {
                      fontWeight: theme.typography.fontWeightMedium,
                      color: 'primary.main',
                    },
                    '&:hover': {
                      backgroundColor: alpha(theme.palette.primary.main, 0.08),
                    },
                  },
                  '& .MuiTabs-indicator': {
                    left: 0, // Move indicator to the left
                    width: 3, // Make indicator thicker
                    borderRadius: '3px 3px 0 0',
                  },
                }}
              >
                <Tab label="Definitions" value="definitions" />
                <Tab label="Relations" value="relations" />
                <Tab label="Etymology" value="etymology" />
                <Tab label="Forms" value="forms" />
                <Tab label="Sources" value="sources" />
                {/* <Tab label="Debug" value="debug" /> */}
              </Tabs>
            )} { /* End of !isMobile check */} 

            {/* Tab Content Area - Takes remaining space and scrolls - Slightly reduce desktop padding */}
            <Box
              sx={{
                flexGrow: 1,
                overflowY: 'auto', // Allow vertical scrolling for content
                p: isMobile ? 1.5 : 2, // Reduce desktop padding slightly (e.g., from 2.5 to 2)
                width: '100%', // Ensure it takes available width
              }}
            >
              {activeTab === 'definitions' && renderDefinitionsTab()}
              {activeTab === 'relations' && renderRelationsTab()}
              {activeTab === 'etymology' && renderEtymologyTab()}
              {activeTab === 'forms' && renderFormsAndTemplatesTab()}
              {activeTab === 'sources' && renderSourcesInfoTab()}
              {/* {activeTab === 'debug' && renderDebugTab()} */}
            </Box> { /* End of Tab Content Area Box */} 
          </Box> { /* End of Tabs and Content Section Box */} 

          {/* Horizontal Tabs for Mobile */} 
          {isMobile && (
            <Paper square sx={{ borderTop: 1, borderColor: 'divider', position: 'sticky', bottom: 0, zIndex: 1 }}>
              <Tabs
                value={activeTab}
                onChange={handleTabChange}
                variant="scrollable"
                scrollButtons="auto"
                allowScrollButtonsMobile
                aria-label="Word details sections mobile"
                sx={{ 
                  '& .MuiTab-root': { fontSize: '0.75rem', minWidth: 'auto', p: 1 },
                }}
              >
                <Tab label="Defs" value="definitions" />
                <Tab label="Rels" value="relations" />
                <Tab label="Etym" value="etymology" />
                <Tab label="Forms" value="forms" />
                <Tab label="Srcs" value="sources" />
                {/* <Tab label="Debug" value="debug" /> */}
              </Tabs>
            </Paper>
          )} { /* End of isMobile check */} 
        </> { /* End of !isLoading && wordData fragment */} 
      )} { /* End of !isLoading && wordData condition */} 
    </Box> { /* End of main wrapper Box */} 
  );
});

// Export the component with memoization
export default React.memo(WordDetailsComponent);